// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: example/example1.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "example/example1.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace example1 {
class TemperaturePktDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TemperaturePkt> {};
TemperaturePktDefaultTypeInternal _TemperaturePkt_default_instance_;

namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace


const ::google::protobuf::uint32* protobuf_Offsets_example_2fexample1_2eproto() GOOGLE_ATTRIBUTE_COLD;
const ::google::protobuf::uint32* protobuf_Offsets_example_2fexample1_2eproto() {
  static const ::google::protobuf::uint32 offsets[] = {
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TemperaturePkt, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TemperaturePkt, device_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TemperaturePkt, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TemperaturePkt, degrees_c_),
  };
  return offsets;
}

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(TemperaturePkt)},
};

static const ::google::protobuf::internal::DefaultInstanceData file_default_instances[] = {
  {reinterpret_cast<const ::google::protobuf::Message*>(&_TemperaturePkt_default_instance_), NULL},
};

namespace {

void protobuf_AssignDescriptors() {
  protobuf_AddDesc_example_2fexample1_2eproto();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "example/example1.proto", schemas, file_default_instances, protobuf_Offsets_example_2fexample1_2eproto(), factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void protobuf_ShutdownFile_example_2fexample1_2eproto() {
  _TemperaturePkt_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void protobuf_InitDefaults_example_2fexample1_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pkt2::protobuf_InitDefaults_pkt2_2eproto();
  ::google::protobuf::internal::InitProtobufDefaults();
  _TemperaturePkt_default_instance_.DefaultConstruct();
}

void protobuf_InitDefaults_example_2fexample1_2eproto() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_InitDefaults_example_2fexample1_2eproto_impl);
}
void protobuf_AddDesc_example_2fexample1_2eproto_impl() {
  protobuf_InitDefaults_example_2fexample1_2eproto();
  static const char descriptor[] = {
      "\n\026example/example1.proto\022\010example1\032\npkt2"
      ".proto\"\300\003\n\016TemperaturePkt\022`\n\006device\030\001 \001("
      "\rBP\272\324\030L\022\tdevice_id\"\024\320\243\321\201\321\202\321\200\320\276\320\271\321\201\321\202\320\262\320\276"
      "*\037\320\235\320\276\320\274\320\265\321\200 \321\203\321\201\321\202\321\200\320\276\320\271\321\201\321\202\320\262\320\260:\006devic"
      "e`\002\022D\n\004time\030\002 \001(\rB6\272\324\0302\022\004time\"\n\320\222\321\200\320\265\320\274\321"
      "\217*\016\320\222\321\200\320\265\320\274\321\217, \321\2012\001s:\tunix_time`\001\022}\n\tdeg"
      "rees_c\030\003 \001(\001Bj\272\324\030f\022\tdegrees_c\"\026\320\242\320\265\320\274\320\277\320"
      "\265\321\200\320\260\321\202\321\203\321\200\320\260*\031\320\242\320\265\320\274\320\277\320\265\321\200\320\260\321\202\321\203\321\200\320\260, C"
      "2\001C:\0341.22 * ((value & 0x0f) << 1)R\005%8.2f"
      ":\206\001\262\324\030\002\022\000\252\324\030|\n\021\010\001\022\r84.237.104.57\032\013temper"
      "ature \351\007*\026\320\242\320\265\320\274\320\277\320\265\321\200\320\260\321\202\321\203\321\200\320\2602\013DEVICE"
      " TEMP:\014\n\006device\020\003(\001:\023\n\tunix_time\020\003\030\002 \001(\004"
      ":\017\n\005value\020\003\030\002 \005(\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 505);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "example/example1.proto", &protobuf_RegisterTypes);
  ::pkt2::protobuf_AddDesc_pkt2_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_example_2fexample1_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_example_2fexample1_2eproto_once_);
void protobuf_AddDesc_example_2fexample1_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_example_2fexample1_2eproto_once_,
                 &protobuf_AddDesc_example_2fexample1_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_example_2fexample1_2eproto {
  StaticDescriptorInitializer_example_2fexample1_2eproto() {
    protobuf_AddDesc_example_2fexample1_2eproto();
  }
} static_descriptor_initializer_example_2fexample1_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TemperaturePkt::kDeviceFieldNumber;
const int TemperaturePkt::kTimeFieldNumber;
const int TemperaturePkt::kDegreesCFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TemperaturePkt::TemperaturePkt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_example_2fexample1_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:example1.TemperaturePkt)
}
TemperaturePkt::TemperaturePkt(const TemperaturePkt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&device_, &from.device_,
    reinterpret_cast<char*>(&degrees_c_) -
    reinterpret_cast<char*>(&device_) + sizeof(degrees_c_));
  // @@protoc_insertion_point(copy_constructor:example1.TemperaturePkt)
}

void TemperaturePkt::SharedCtor() {
  ::memset(&device_, 0, reinterpret_cast<char*>(&degrees_c_) -
    reinterpret_cast<char*>(&device_) + sizeof(degrees_c_));
  _cached_size_ = 0;
}

TemperaturePkt::~TemperaturePkt() {
  // @@protoc_insertion_point(destructor:example1.TemperaturePkt)
  SharedDtor();
}

void TemperaturePkt::SharedDtor() {
}

void TemperaturePkt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TemperaturePkt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[0].descriptor;
}

const TemperaturePkt& TemperaturePkt::default_instance() {
  protobuf_InitDefaults_example_2fexample1_2eproto();
  return *internal_default_instance();
}

TemperaturePkt* TemperaturePkt::New(::google::protobuf::Arena* arena) const {
  TemperaturePkt* n = new TemperaturePkt;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TemperaturePkt::Clear() {
// @@protoc_insertion_point(message_clear_start:example1.TemperaturePkt)
  ::memset(&device_, 0, reinterpret_cast<char*>(&degrees_c_) -
    reinterpret_cast<char*>(&device_) + sizeof(degrees_c_));
}

bool TemperaturePkt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:example1.TemperaturePkt)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 device = 1 [(.pkt2.variable) = {
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &device_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 time = 2 [(.pkt2.variable) = {
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double degrees_c = 3 [(.pkt2.variable) = {
      case 3: {
        if (tag == 25u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &degrees_c_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:example1.TemperaturePkt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:example1.TemperaturePkt)
  return false;
#undef DO_
}

void TemperaturePkt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:example1.TemperaturePkt)
  // uint32 device = 1 [(.pkt2.variable) = {
  if (this->device() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->device(), output);
  }

  // uint32 time = 2 [(.pkt2.variable) = {
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->time(), output);
  }

  // double degrees_c = 3 [(.pkt2.variable) = {
  if (this->degrees_c() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->degrees_c(), output);
  }

  // @@protoc_insertion_point(serialize_end:example1.TemperaturePkt)
}

::google::protobuf::uint8* TemperaturePkt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:example1.TemperaturePkt)
  // uint32 device = 1 [(.pkt2.variable) = {
  if (this->device() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->device(), target);
  }

  // uint32 time = 2 [(.pkt2.variable) = {
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->time(), target);
  }

  // double degrees_c = 3 [(.pkt2.variable) = {
  if (this->degrees_c() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->degrees_c(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:example1.TemperaturePkt)
  return target;
}

size_t TemperaturePkt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:example1.TemperaturePkt)
  size_t total_size = 0;

  // uint32 device = 1 [(.pkt2.variable) = {
  if (this->device() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->device());
  }

  // uint32 time = 2 [(.pkt2.variable) = {
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->time());
  }

  // double degrees_c = 3 [(.pkt2.variable) = {
  if (this->degrees_c() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TemperaturePkt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:example1.TemperaturePkt)
  GOOGLE_DCHECK_NE(&from, this);
  const TemperaturePkt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TemperaturePkt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:example1.TemperaturePkt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:example1.TemperaturePkt)
    MergeFrom(*source);
  }
}

void TemperaturePkt::MergeFrom(const TemperaturePkt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:example1.TemperaturePkt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.device() != 0) {
    set_device(from.device());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.degrees_c() != 0) {
    set_degrees_c(from.degrees_c());
  }
}

void TemperaturePkt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:example1.TemperaturePkt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TemperaturePkt::CopyFrom(const TemperaturePkt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:example1.TemperaturePkt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TemperaturePkt::IsInitialized() const {
  return true;
}

void TemperaturePkt::Swap(TemperaturePkt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TemperaturePkt::InternalSwap(TemperaturePkt* other) {
  std::swap(device_, other->device_);
  std::swap(time_, other->time_);
  std::swap(degrees_c_, other->degrees_c_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TemperaturePkt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TemperaturePkt

// uint32 device = 1 [(.pkt2.variable) = {
void TemperaturePkt::clear_device() {
  device_ = 0u;
}
::google::protobuf::uint32 TemperaturePkt::device() const {
  // @@protoc_insertion_point(field_get:example1.TemperaturePkt.device)
  return device_;
}
void TemperaturePkt::set_device(::google::protobuf::uint32 value) {
  
  device_ = value;
  // @@protoc_insertion_point(field_set:example1.TemperaturePkt.device)
}

// uint32 time = 2 [(.pkt2.variable) = {
void TemperaturePkt::clear_time() {
  time_ = 0u;
}
::google::protobuf::uint32 TemperaturePkt::time() const {
  // @@protoc_insertion_point(field_get:example1.TemperaturePkt.time)
  return time_;
}
void TemperaturePkt::set_time(::google::protobuf::uint32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:example1.TemperaturePkt.time)
}

// double degrees_c = 3 [(.pkt2.variable) = {
void TemperaturePkt::clear_degrees_c() {
  degrees_c_ = 0;
}
double TemperaturePkt::degrees_c() const {
  // @@protoc_insertion_point(field_get:example1.TemperaturePkt.degrees_c)
  return degrees_c_;
}
void TemperaturePkt::set_degrees_c(double value) {
  
  degrees_c_ = value;
  // @@protoc_insertion_point(field_set:example1.TemperaturePkt.degrees_c)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace example1

// @@protoc_insertion_point(global_scope)
