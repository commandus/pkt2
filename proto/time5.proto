syntax = "proto3";

package iridium;

option cc_enable_arenas = true;

import "pkt2.proto";

/*
// 5 bytes time
// 2 байта год/месяц/день
//	7 бит год           0b xxxx xxx0
//	4 бита месяц        0b x xxx0 0000
//	5 бит день          0b 000x xxxx
typedef ALIGN struct {
	uint16_t day: 5;
	uint16_t month: 4;
	uint16_t year: 7;

	uint8_t hour;
	uint8_t minute;
	uint8_t second;
} PACKED time5;
*/
message Time5
{
	// input packet
    option(pkt2.packet) = { 
        name: "time5"
        short_name: "Время"
        full_name: "Дата и время"
        set: "tm *info = localtime(&date_time);        second = info.tm_sec;        minute = info.tm_min;        hour = info.tm_hour;        day_month_year = info.tm_mday + (info.tm_mon << 5) + ((info.tm_year -100) << 9);"
        fields: [
        {
            name: "day_month_year"
            type: INPUT_UINT
            size: 2
            offset: 0
        },
        {
            name: "hour"
            type: INPUT_UINT
            size: 1
            offset: 2
        },
        {
            name: "minute"
            type: INPUT_UINT
            size: 1
            offset: 3
            endian: ENDIAN_BIG_ENDIAN
        },
        {
            name: "second"
            type: INPUT_UINT
            size: 1
            offset: 4
            endian: ENDIAN_BIG_ENDIAN
        }]
    };
    
    // output
    uint32 date_time = 1 [(pkt2.variable) = {
        name: "datetime"
        short_name: "Время"
        full_name: "Время, Unix epoch"
        measure_unit: "s"
        get: "struct tm info;             info.tm_year = (day_month_year & ((1 << 7) - 1)) + 2000 - 1900; 			info.tm_mon = (day_month_year >> 7) & ((1 << 4) - 1) - 1; 			info.tm_mday = (day_month_year >> (7 + 4)) & ((1 << 5) - 1);			info.tm_hour = hour;			info.tm_min = minute; 			info.tm_sec = second; 			info.tm_isdst = -1; 			RETURN_VALUE(mktime(&info));" 
        priority: 0
        tostring: "char f[30];            struct tm = localtime(&INPUT_VALUE);        	strftime(f, sizeof(f), \"T %Y-%m-%d\", &tm);        	RETURN_VALUE(f);"
        format: "%d"
    }];
}

