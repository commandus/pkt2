// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pkt2.proto

#ifndef PROTOBUF_pkt2_2eproto__INCLUDED
#define PROTOBUF_pkt2_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/descriptor.pb.h>
// @@protoc_insertion_point(includes)
namespace google {
namespace protobuf {
class DescriptorProto;
class DescriptorProtoDefaultTypeInternal;
extern DescriptorProtoDefaultTypeInternal _DescriptorProto_default_instance_;
class DescriptorProto_ExtensionRange;
class DescriptorProto_ExtensionRangeDefaultTypeInternal;
extern DescriptorProto_ExtensionRangeDefaultTypeInternal _DescriptorProto_ExtensionRange_default_instance_;
class DescriptorProto_ReservedRange;
class DescriptorProto_ReservedRangeDefaultTypeInternal;
extern DescriptorProto_ReservedRangeDefaultTypeInternal _DescriptorProto_ReservedRange_default_instance_;
class EnumDescriptorProto;
class EnumDescriptorProtoDefaultTypeInternal;
extern EnumDescriptorProtoDefaultTypeInternal _EnumDescriptorProto_default_instance_;
class EnumOptions;
class EnumOptionsDefaultTypeInternal;
extern EnumOptionsDefaultTypeInternal _EnumOptions_default_instance_;
class EnumValueDescriptorProto;
class EnumValueDescriptorProtoDefaultTypeInternal;
extern EnumValueDescriptorProtoDefaultTypeInternal _EnumValueDescriptorProto_default_instance_;
class EnumValueOptions;
class EnumValueOptionsDefaultTypeInternal;
extern EnumValueOptionsDefaultTypeInternal _EnumValueOptions_default_instance_;
class FieldDescriptorProto;
class FieldDescriptorProtoDefaultTypeInternal;
extern FieldDescriptorProtoDefaultTypeInternal _FieldDescriptorProto_default_instance_;
class FieldOptions;
class FieldOptionsDefaultTypeInternal;
extern FieldOptionsDefaultTypeInternal _FieldOptions_default_instance_;
class FileDescriptorProto;
class FileDescriptorProtoDefaultTypeInternal;
extern FileDescriptorProtoDefaultTypeInternal _FileDescriptorProto_default_instance_;
class FileDescriptorSet;
class FileDescriptorSetDefaultTypeInternal;
extern FileDescriptorSetDefaultTypeInternal _FileDescriptorSet_default_instance_;
class FileOptions;
class FileOptionsDefaultTypeInternal;
extern FileOptionsDefaultTypeInternal _FileOptions_default_instance_;
class GeneratedCodeInfo;
class GeneratedCodeInfoDefaultTypeInternal;
extern GeneratedCodeInfoDefaultTypeInternal _GeneratedCodeInfo_default_instance_;
class GeneratedCodeInfo_Annotation;
class GeneratedCodeInfo_AnnotationDefaultTypeInternal;
extern GeneratedCodeInfo_AnnotationDefaultTypeInternal _GeneratedCodeInfo_Annotation_default_instance_;
class MessageOptions;
class MessageOptionsDefaultTypeInternal;
extern MessageOptionsDefaultTypeInternal _MessageOptions_default_instance_;
class MethodDescriptorProto;
class MethodDescriptorProtoDefaultTypeInternal;
extern MethodDescriptorProtoDefaultTypeInternal _MethodDescriptorProto_default_instance_;
class MethodOptions;
class MethodOptionsDefaultTypeInternal;
extern MethodOptionsDefaultTypeInternal _MethodOptions_default_instance_;
class OneofDescriptorProto;
class OneofDescriptorProtoDefaultTypeInternal;
extern OneofDescriptorProtoDefaultTypeInternal _OneofDescriptorProto_default_instance_;
class OneofOptions;
class OneofOptionsDefaultTypeInternal;
extern OneofOptionsDefaultTypeInternal _OneofOptions_default_instance_;
class ServiceDescriptorProto;
class ServiceDescriptorProtoDefaultTypeInternal;
extern ServiceDescriptorProtoDefaultTypeInternal _ServiceDescriptorProto_default_instance_;
class ServiceOptions;
class ServiceOptionsDefaultTypeInternal;
extern ServiceOptionsDefaultTypeInternal _ServiceOptions_default_instance_;
class SourceCodeInfo;
class SourceCodeInfoDefaultTypeInternal;
extern SourceCodeInfoDefaultTypeInternal _SourceCodeInfo_default_instance_;
class SourceCodeInfo_Location;
class SourceCodeInfo_LocationDefaultTypeInternal;
extern SourceCodeInfo_LocationDefaultTypeInternal _SourceCodeInfo_Location_default_instance_;
class UninterpretedOption;
class UninterpretedOptionDefaultTypeInternal;
extern UninterpretedOptionDefaultTypeInternal _UninterpretedOption_default_instance_;
class UninterpretedOption_NamePart;
class UninterpretedOption_NamePartDefaultTypeInternal;
extern UninterpretedOption_NamePartDefaultTypeInternal _UninterpretedOption_NamePart_default_instance_;
}  // namespace protobuf
}  // namespace google
namespace pkt2 {
class Address;
class AddressDefaultTypeInternal;
extern AddressDefaultTypeInternal _Address_default_instance_;
class Field;
class FieldDefaultTypeInternal;
extern FieldDefaultTypeInternal _Field_default_instance_;
class Output;
class OutputDefaultTypeInternal;
extern OutputDefaultTypeInternal _Output_default_instance_;
class Packet;
class PacketDefaultTypeInternal;
extern PacketDefaultTypeInternal _Packet_default_instance_;
class Sql;
class SqlDefaultTypeInternal;
extern SqlDefaultTypeInternal _Sql_default_instance_;
class Variable;
class VariableDefaultTypeInternal;
extern VariableDefaultTypeInternal _Variable_default_instance_;
}  // namespace pkt2

namespace pkt2 {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_pkt2_2eproto();
void protobuf_InitDefaults_pkt2_2eproto();

enum InputType {
  INPUT_NONE = 0,
  INPUT_DOUBLE = 1,
  INPUT_INT = 2,
  INPUT_UINT = 3,
  INPUT_BYTES = 4,
  INPUT_CHAR = 5,
  INPUT_STRING = 6,
  InputType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  InputType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool InputType_IsValid(int value);
const InputType InputType_MIN = INPUT_NONE;
const InputType InputType_MAX = INPUT_STRING;
const int InputType_ARRAYSIZE = InputType_MAX + 1;

const ::google::protobuf::EnumDescriptor* InputType_descriptor();
inline const ::std::string& InputType_Name(InputType value) {
  return ::google::protobuf::internal::NameOfEnum(
    InputType_descriptor(), value);
}
inline bool InputType_Parse(
    const ::std::string& name, InputType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InputType>(
    InputType_descriptor(), name, value);
}
enum OutputType {
  OUTPUT_NONE = 0,
  OUTPUT_DOUBLE = 1,
  OUTPUT_FLOAT = 2,
  OUTPUT_INT64 = 3,
  OUTPUT_UINT64 = 4,
  OUTPUT_INT32 = 5,
  OUTPUT_FIXED64 = 6,
  OUTPUT_FIXED32 = 7,
  OUTPUT_BOOL = 8,
  OUTPUT_STRING = 9,
  OUTPUT_GROUP = 10,
  OUTPUT_MESSAGE = 11,
  OUTPUT_BYTES = 12,
  OUTPUT_UINT32 = 13,
  OUTPUT_ENUM = 14,
  OUTPUT_SFIXED32 = 15,
  OUTPUT_SFIXED64 = 16,
  OUTPUT_SINT32 = 17,
  OUTPUT_SINT64 = 18,
  OutputType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OutputType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OutputType_IsValid(int value);
const OutputType OutputType_MIN = OUTPUT_NONE;
const OutputType OutputType_MAX = OUTPUT_SINT64;
const int OutputType_ARRAYSIZE = OutputType_MAX + 1;

const ::google::protobuf::EnumDescriptor* OutputType_descriptor();
inline const ::std::string& OutputType_Name(OutputType value) {
  return ::google::protobuf::internal::NameOfEnum(
    OutputType_descriptor(), value);
}
inline bool OutputType_Parse(
    const ::std::string& name, OutputType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OutputType>(
    OutputType_descriptor(), name, value);
}
enum Endian {
  ENDIAN_NO_MATTER = 0,
  ENDIAN_LITTLE_ENDIAN = 1,
  ENDIAN_BIG_ENDIAN = 2,
  Endian_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Endian_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Endian_IsValid(int value);
const Endian Endian_MIN = ENDIAN_NO_MATTER;
const Endian Endian_MAX = ENDIAN_BIG_ENDIAN;
const int Endian_ARRAYSIZE = Endian_MAX + 1;

const ::google::protobuf::EnumDescriptor* Endian_descriptor();
inline const ::std::string& Endian_Name(Endian value) {
  return ::google::protobuf::internal::NameOfEnum(
    Endian_descriptor(), value);
}
inline bool Endian_Parse(
    const ::std::string& name, Endian* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Endian>(
    Endian_descriptor(), name, value);
}
enum Proto {
  PROTO_NONE = 0,
  PROTO_TCP = 1,
  PROTO_UDP = 2,
  Proto_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Proto_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Proto_IsValid(int value);
const Proto Proto_MIN = PROTO_NONE;
const Proto Proto_MAX = PROTO_UDP;
const int Proto_ARRAYSIZE = Proto_MAX + 1;

const ::google::protobuf::EnumDescriptor* Proto_descriptor();
inline const ::std::string& Proto_Name(Proto value) {
  return ::google::protobuf::internal::NameOfEnum(
    Proto_descriptor(), value);
}
inline bool Proto_Parse(
    const ::std::string& name, Proto* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Proto>(
    Proto_descriptor(), name, value);
}
enum Dialect {
  SQL_POSTGRESQL = 0,
  SQL_MYSQL = 1,
  SQL_FIREBIRD = 2,
  Dialect_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Dialect_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Dialect_IsValid(int value);
const Dialect Dialect_MIN = SQL_POSTGRESQL;
const Dialect Dialect_MAX = SQL_FIREBIRD;
const int Dialect_ARRAYSIZE = Dialect_MAX + 1;

const ::google::protobuf::EnumDescriptor* Dialect_descriptor();
inline const ::std::string& Dialect_Name(Dialect value) {
  return ::google::protobuf::internal::NameOfEnum(
    Dialect_descriptor(), value);
}
inline bool Dialect_Parse(
    const ::std::string& name, Dialect* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Dialect>(
    Dialect_descriptor(), name, value);
}
// ===================================================================

class Field : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pkt2.Field) */ {
 public:
  Field();
  virtual ~Field();

  Field(const Field& from);

  inline Field& operator=(const Field& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Field& default_instance();

  static inline const Field* internal_default_instance() {
    return reinterpret_cast<const Field*>(
               &_Field_default_instance_);
  }

  void UnsafeArenaSwap(Field* other);
  void Swap(Field* other);

  // implements Message ----------------------------------------------

  inline Field* New() const PROTOBUF_FINAL { return New(NULL); }

  Field* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Field& from);
  void MergeFrom(const Field& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Field* other);
  protected:
  explicit Field(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  ::std::string* unsafe_arena_release_name();
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // .pkt2.InputType type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::pkt2::InputType type() const;
  void set_type(::pkt2::InputType value);

  // .pkt2.Endian endian = 3;
  void clear_endian();
  static const int kEndianFieldNumber = 3;
  ::pkt2::Endian endian() const;
  void set_endian(::pkt2::Endian value);

  // uint32 offset = 4;
  void clear_offset();
  static const int kOffsetFieldNumber = 4;
  ::google::protobuf::uint32 offset() const;
  void set_offset(::google::protobuf::uint32 value);

  // uint32 size = 5;
  void clear_size();
  static const int kSizeFieldNumber = 5;
  ::google::protobuf::uint32 size() const;
  void set_size(::google::protobuf::uint32 value);

  // uint64 tag = 6;
  void clear_tag();
  static const int kTagFieldNumber = 6;
  ::google::protobuf::uint64 tag() const;
  void set_tag(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pkt2.Field)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  int type_;
  int endian_;
  ::google::protobuf::uint32 offset_;
  ::google::protobuf::uint32 size_;
  ::google::protobuf::uint64 tag_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_pkt2_2eproto_impl();
  friend void  protobuf_AddDesc_pkt2_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_pkt2_2eproto();
  friend void protobuf_ShutdownFile_pkt2_2eproto();

};
// -------------------------------------------------------------------

class Variable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pkt2.Variable) */ {
 public:
  Variable();
  virtual ~Variable();

  Variable(const Variable& from);

  inline Variable& operator=(const Variable& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Variable& default_instance();

  static inline const Variable* internal_default_instance() {
    return reinterpret_cast<const Variable*>(
               &_Variable_default_instance_);
  }

  void UnsafeArenaSwap(Variable* other);
  void Swap(Variable* other);

  // implements Message ----------------------------------------------

  inline Variable* New() const PROTOBUF_FINAL { return New(NULL); }

  Variable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Variable& from);
  void MergeFrom(const Variable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Variable* other);
  protected:
  explicit Variable(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string field = 1;
  void clear_field();
  static const int kFieldFieldNumber = 1;
  const ::std::string& field() const;
  void set_field(const ::std::string& value);
  void set_field(const char* value);
  void set_field(const char* value, size_t size);
  ::std::string* mutable_field();
  ::std::string* release_field();
  void set_allocated_field(::std::string* field);
  ::std::string* unsafe_arena_release_field();
  void unsafe_arena_set_allocated_field(
      ::std::string* field);

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  ::std::string* unsafe_arena_release_name();
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // .pkt2.OutputType type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::pkt2::OutputType type() const;
  void set_type(::pkt2::OutputType value);

  // string short_name = 4;
  void clear_short_name();
  static const int kShortNameFieldNumber = 4;
  const ::std::string& short_name() const;
  void set_short_name(const ::std::string& value);
  void set_short_name(const char* value);
  void set_short_name(const char* value, size_t size);
  ::std::string* mutable_short_name();
  ::std::string* release_short_name();
  void set_allocated_short_name(::std::string* short_name);
  ::std::string* unsafe_arena_release_short_name();
  void unsafe_arena_set_allocated_short_name(
      ::std::string* short_name);

  // string full_name = 5;
  void clear_full_name();
  static const int kFullNameFieldNumber = 5;
  const ::std::string& full_name() const;
  void set_full_name(const ::std::string& value);
  void set_full_name(const char* value);
  void set_full_name(const char* value, size_t size);
  ::std::string* mutable_full_name();
  ::std::string* release_full_name();
  void set_allocated_full_name(::std::string* full_name);
  ::std::string* unsafe_arena_release_full_name();
  void unsafe_arena_set_allocated_full_name(
      ::std::string* full_name);

  // string measure_unit = 6;
  void clear_measure_unit();
  static const int kMeasureUnitFieldNumber = 6;
  const ::std::string& measure_unit() const;
  void set_measure_unit(const ::std::string& value);
  void set_measure_unit(const char* value);
  void set_measure_unit(const char* value, size_t size);
  ::std::string* mutable_measure_unit();
  ::std::string* release_measure_unit();
  void set_allocated_measure_unit(::std::string* measure_unit);
  ::std::string* unsafe_arena_release_measure_unit();
  void unsafe_arena_set_allocated_measure_unit(
      ::std::string* measure_unit);

  // string get = 7;
  void clear_get();
  static const int kGetFieldNumber = 7;
  const ::std::string& get() const;
  void set_get(const ::std::string& value);
  void set_get(const char* value);
  void set_get(const char* value, size_t size);
  ::std::string* mutable_get();
  ::std::string* release_get();
  void set_allocated_get(::std::string* get);
  ::std::string* unsafe_arena_release_get();
  void unsafe_arena_set_allocated_get(
      ::std::string* get);

  // repeated string values = 8;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 8;
  const ::std::string& values(int index) const;
  ::std::string* mutable_values(int index);
  void set_values(int index, const ::std::string& value);
  void set_values(int index, const char* value);
  void set_values(int index, const char* value, size_t size);
  ::std::string* add_values();
  void add_values(const ::std::string& value);
  void add_values(const char* value);
  void add_values(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& values() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_values();

  // uint32 priority = 9;
  void clear_priority();
  static const int kPriorityFieldNumber = 9;
  ::google::protobuf::uint32 priority() const;
  void set_priority(::google::protobuf::uint32 value);

  // string format = 10;
  void clear_format();
  static const int kFormatFieldNumber = 10;
  const ::std::string& format() const;
  void set_format(const ::std::string& value);
  void set_format(const char* value);
  void set_format(const char* value, size_t size);
  ::std::string* mutable_format();
  ::std::string* release_format();
  void set_allocated_format(::std::string* format);
  ::std::string* unsafe_arena_release_format();
  void unsafe_arena_set_allocated_format(
      ::std::string* format);

  // string tostring = 11;
  void clear_tostring();
  static const int kTostringFieldNumber = 11;
  const ::std::string& tostring() const;
  void set_tostring(const ::std::string& value);
  void set_tostring(const char* value);
  void set_tostring(const char* value, size_t size);
  ::std::string* mutable_tostring();
  ::std::string* release_tostring();
  void set_allocated_tostring(::std::string* tostring);
  ::std::string* unsafe_arena_release_tostring();
  void unsafe_arena_set_allocated_tostring(
      ::std::string* tostring);

  // uint32 index = 12;
  void clear_index();
  static const int kIndexFieldNumber = 12;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pkt2.Variable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> values_;
  ::google::protobuf::internal::ArenaStringPtr field_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr short_name_;
  ::google::protobuf::internal::ArenaStringPtr full_name_;
  ::google::protobuf::internal::ArenaStringPtr measure_unit_;
  ::google::protobuf::internal::ArenaStringPtr get_;
  ::google::protobuf::internal::ArenaStringPtr format_;
  ::google::protobuf::internal::ArenaStringPtr tostring_;
  int type_;
  ::google::protobuf::uint32 priority_;
  ::google::protobuf::uint32 index_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_pkt2_2eproto_impl();
  friend void  protobuf_AddDesc_pkt2_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_pkt2_2eproto();
  friend void protobuf_ShutdownFile_pkt2_2eproto();

};
// -------------------------------------------------------------------

class Address : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pkt2.Address) */ {
 public:
  Address();
  virtual ~Address();

  Address(const Address& from);

  inline Address& operator=(const Address& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Address& default_instance();

  static inline const Address* internal_default_instance() {
    return reinterpret_cast<const Address*>(
               &_Address_default_instance_);
  }

  void UnsafeArenaSwap(Address* other);
  void Swap(Address* other);

  // implements Message ----------------------------------------------

  inline Address* New() const PROTOBUF_FINAL { return New(NULL); }

  Address* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Address& from);
  void MergeFrom(const Address& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Address* other);
  protected:
  explicit Address(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .pkt2.Proto proto = 1;
  void clear_proto();
  static const int kProtoFieldNumber = 1;
  ::pkt2::Proto proto() const;
  void set_proto(::pkt2::Proto value);

  // string address = 2;
  void clear_address();
  static const int kAddressFieldNumber = 2;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);
  ::std::string* unsafe_arena_release_address();
  void unsafe_arena_set_allocated_address(
      ::std::string* address);

  // uint32 port = 3;
  void clear_port();
  static const int kPortFieldNumber = 3;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pkt2.Address)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  int proto_;
  ::google::protobuf::uint32 port_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_pkt2_2eproto_impl();
  friend void  protobuf_AddDesc_pkt2_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_pkt2_2eproto();
  friend void protobuf_ShutdownFile_pkt2_2eproto();

};
// -------------------------------------------------------------------

class Packet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pkt2.Packet) */ {
 public:
  Packet();
  virtual ~Packet();

  Packet(const Packet& from);

  inline Packet& operator=(const Packet& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Packet& default_instance();

  static inline const Packet* internal_default_instance() {
    return reinterpret_cast<const Packet*>(
               &_Packet_default_instance_);
  }

  void UnsafeArenaSwap(Packet* other);
  void Swap(Packet* other);

  // implements Message ----------------------------------------------

  inline Packet* New() const PROTOBUF_FINAL { return New(NULL); }

  Packet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Packet& from);
  void MergeFrom(const Packet& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Packet* other);
  protected:
  explicit Packet(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pkt2.Address source = 1;
  int source_size() const;
  void clear_source();
  static const int kSourceFieldNumber = 1;
  const ::pkt2::Address& source(int index) const;
  ::pkt2::Address* mutable_source(int index);
  ::pkt2::Address* add_source();
  ::google::protobuf::RepeatedPtrField< ::pkt2::Address >*
      mutable_source();
  const ::google::protobuf::RepeatedPtrField< ::pkt2::Address >&
      source() const;

  // repeated .pkt2.Address destination = 2;
  int destination_size() const;
  void clear_destination();
  static const int kDestinationFieldNumber = 2;
  const ::pkt2::Address& destination(int index) const;
  ::pkt2::Address* mutable_destination(int index);
  ::pkt2::Address* add_destination();
  ::google::protobuf::RepeatedPtrField< ::pkt2::Address >*
      mutable_destination();
  const ::google::protobuf::RepeatedPtrField< ::pkt2::Address >&
      destination() const;

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  ::std::string* unsafe_arena_release_name();
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // uint64 id = 4;
  void clear_id();
  static const int kIdFieldNumber = 4;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // string short_name = 5;
  void clear_short_name();
  static const int kShortNameFieldNumber = 5;
  const ::std::string& short_name() const;
  void set_short_name(const ::std::string& value);
  void set_short_name(const char* value);
  void set_short_name(const char* value, size_t size);
  ::std::string* mutable_short_name();
  ::std::string* release_short_name();
  void set_allocated_short_name(::std::string* short_name);
  ::std::string* unsafe_arena_release_short_name();
  void unsafe_arena_set_allocated_short_name(
      ::std::string* short_name);

  // string full_name = 6;
  void clear_full_name();
  static const int kFullNameFieldNumber = 6;
  const ::std::string& full_name() const;
  void set_full_name(const ::std::string& value);
  void set_full_name(const char* value);
  void set_full_name(const char* value, size_t size);
  ::std::string* mutable_full_name();
  ::std::string* release_full_name();
  void set_allocated_full_name(::std::string* full_name);
  ::std::string* unsafe_arena_release_full_name();
  void unsafe_arena_set_allocated_full_name(
      ::std::string* full_name);

  // repeated .pkt2.Field fields = 7;
  int fields_size() const;
  void clear_fields();
  static const int kFieldsFieldNumber = 7;
  const ::pkt2::Field& fields(int index) const;
  ::pkt2::Field* mutable_fields(int index);
  ::pkt2::Field* add_fields();
  ::google::protobuf::RepeatedPtrField< ::pkt2::Field >*
      mutable_fields();
  const ::google::protobuf::RepeatedPtrField< ::pkt2::Field >&
      fields() const;

  // string set = 8;
  void clear_set();
  static const int kSetFieldNumber = 8;
  const ::std::string& set() const;
  void set_set(const ::std::string& value);
  void set_set(const char* value);
  void set_set(const char* value, size_t size);
  ::std::string* mutable_set();
  ::std::string* release_set();
  void set_allocated_set(::std::string* set);
  ::std::string* unsafe_arena_release_set();
  void unsafe_arena_set_allocated_set(
      ::std::string* set);

  // repeated string head = 10;
  int head_size() const;
  void clear_head();
  static const int kHeadFieldNumber = 10;
  const ::std::string& head(int index) const;
  ::std::string* mutable_head(int index);
  void set_head(int index, const ::std::string& value);
  void set_head(int index, const char* value);
  void set_head(int index, const char* value, size_t size);
  ::std::string* add_head();
  void add_head(const ::std::string& value);
  void add_head(const char* value);
  void add_head(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& head() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_head();

  // @@protoc_insertion_point(class_scope:pkt2.Packet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::pkt2::Address > source_;
  ::google::protobuf::RepeatedPtrField< ::pkt2::Address > destination_;
  ::google::protobuf::RepeatedPtrField< ::pkt2::Field > fields_;
  ::google::protobuf::RepeatedPtrField< ::std::string> head_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr short_name_;
  ::google::protobuf::internal::ArenaStringPtr full_name_;
  ::google::protobuf::internal::ArenaStringPtr set_;
  ::google::protobuf::uint64 id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_pkt2_2eproto_impl();
  friend void  protobuf_AddDesc_pkt2_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_pkt2_2eproto();
  friend void protobuf_ShutdownFile_pkt2_2eproto();

};
// -------------------------------------------------------------------

class Sql : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pkt2.Sql) */ {
 public:
  Sql();
  virtual ~Sql();

  Sql(const Sql& from);

  inline Sql& operator=(const Sql& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Sql& default_instance();

  static inline const Sql* internal_default_instance() {
    return reinterpret_cast<const Sql*>(
               &_Sql_default_instance_);
  }

  void UnsafeArenaSwap(Sql* other);
  void Swap(Sql* other);

  // implements Message ----------------------------------------------

  inline Sql* New() const PROTOBUF_FINAL { return New(NULL); }

  Sql* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Sql& from);
  void MergeFrom(const Sql& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Sql* other);
  protected:
  explicit Sql(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .pkt2.Dialect dialect = 1;
  void clear_dialect();
  static const int kDialectFieldNumber = 1;
  ::pkt2::Dialect dialect() const;
  void set_dialect(::pkt2::Dialect value);

  // @@protoc_insertion_point(class_scope:pkt2.Sql)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int dialect_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_pkt2_2eproto_impl();
  friend void  protobuf_AddDesc_pkt2_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_pkt2_2eproto();
  friend void protobuf_ShutdownFile_pkt2_2eproto();

};
// -------------------------------------------------------------------

class Output : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pkt2.Output) */ {
 public:
  Output();
  virtual ~Output();

  Output(const Output& from);

  inline Output& operator=(const Output& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Output& default_instance();

  static inline const Output* internal_default_instance() {
    return reinterpret_cast<const Output*>(
               &_Output_default_instance_);
  }

  void UnsafeArenaSwap(Output* other);
  void Swap(Output* other);

  // implements Message ----------------------------------------------

  inline Output* New() const PROTOBUF_FINAL { return New(NULL); }

  Output* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Output& from);
  void MergeFrom(const Output& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Output* other);
  protected:
  explicit Output(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // .pkt2.Sql sql = 2;
  bool has_sql() const;
  void clear_sql();
  static const int kSqlFieldNumber = 2;
  private:
  void _slow_mutable_sql();
  void _slow_set_allocated_sql(
      ::google::protobuf::Arena* message_arena, ::pkt2::Sql** sql);
  ::pkt2::Sql* _slow_release_sql();
  public:
  const ::pkt2::Sql& sql() const;
  ::pkt2::Sql* mutable_sql();
  ::pkt2::Sql* release_sql();
  void set_allocated_sql(::pkt2::Sql* sql);
  ::pkt2::Sql* unsafe_arena_release_sql();
  void unsafe_arena_set_allocated_sql(
      ::pkt2::Sql* sql);

  // @@protoc_insertion_point(class_scope:pkt2.Output)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pkt2::Sql* sql_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_pkt2_2eproto_impl();
  friend void  protobuf_AddDesc_pkt2_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_pkt2_2eproto();
  friend void protobuf_ShutdownFile_pkt2_2eproto();

};
// ===================================================================

static const int kPacketFieldNumber = 50501;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::google::protobuf::internal::MessageTypeTraits< ::pkt2::Packet >, 11, false >
  packet;
static const int kOutputFieldNumber = 50502;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::google::protobuf::internal::MessageTypeTraits< ::pkt2::Output >, 11, false >
  output;
static const int kVariableFieldNumber = 50503;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::MessageTypeTraits< ::pkt2::Variable >, 11, false >
  variable;

// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Field

// string name = 1;
inline void Field::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Field::name() const {
  // @@protoc_insertion_point(field_get:pkt2.Field.name)
  return name_.Get();
}
inline void Field::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pkt2.Field.name)
}
inline void Field::set_name(const char* value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pkt2.Field.name)
}
inline void Field::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pkt2.Field.name)
}
inline ::std::string* Field::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:pkt2.Field.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Field::release_name() {
  // @@protoc_insertion_point(field_release:pkt2.Field.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Field::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pkt2.Field.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Field::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pkt2.Field.name)
}
inline void Field::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pkt2.Field.name)
}

// .pkt2.InputType type = 2;
inline void Field::clear_type() {
  type_ = 0;
}
inline ::pkt2::InputType Field::type() const {
  // @@protoc_insertion_point(field_get:pkt2.Field.type)
  return static_cast< ::pkt2::InputType >(type_);
}
inline void Field::set_type(::pkt2::InputType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:pkt2.Field.type)
}

// .pkt2.Endian endian = 3;
inline void Field::clear_endian() {
  endian_ = 0;
}
inline ::pkt2::Endian Field::endian() const {
  // @@protoc_insertion_point(field_get:pkt2.Field.endian)
  return static_cast< ::pkt2::Endian >(endian_);
}
inline void Field::set_endian(::pkt2::Endian value) {
  
  endian_ = value;
  // @@protoc_insertion_point(field_set:pkt2.Field.endian)
}

// uint32 offset = 4;
inline void Field::clear_offset() {
  offset_ = 0u;
}
inline ::google::protobuf::uint32 Field::offset() const {
  // @@protoc_insertion_point(field_get:pkt2.Field.offset)
  return offset_;
}
inline void Field::set_offset(::google::protobuf::uint32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:pkt2.Field.offset)
}

// uint32 size = 5;
inline void Field::clear_size() {
  size_ = 0u;
}
inline ::google::protobuf::uint32 Field::size() const {
  // @@protoc_insertion_point(field_get:pkt2.Field.size)
  return size_;
}
inline void Field::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:pkt2.Field.size)
}

// uint64 tag = 6;
inline void Field::clear_tag() {
  tag_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Field::tag() const {
  // @@protoc_insertion_point(field_get:pkt2.Field.tag)
  return tag_;
}
inline void Field::set_tag(::google::protobuf::uint64 value) {
  
  tag_ = value;
  // @@protoc_insertion_point(field_set:pkt2.Field.tag)
}

// -------------------------------------------------------------------

// Variable

// string field = 1;
inline void Variable::clear_field() {
  field_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Variable::field() const {
  // @@protoc_insertion_point(field_get:pkt2.Variable.field)
  return field_.Get();
}
inline void Variable::set_field(const ::std::string& value) {
  
  field_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pkt2.Variable.field)
}
inline void Variable::set_field(const char* value) {
  
  field_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pkt2.Variable.field)
}
inline void Variable::set_field(const char* value,
    size_t size) {
  
  field_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pkt2.Variable.field)
}
inline ::std::string* Variable::mutable_field() {
  
  // @@protoc_insertion_point(field_mutable:pkt2.Variable.field)
  return field_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Variable::release_field() {
  // @@protoc_insertion_point(field_release:pkt2.Variable.field)
  
  return field_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Variable::unsafe_arena_release_field() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pkt2.Variable.field)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return field_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Variable::set_allocated_field(::std::string* field) {
  if (field != NULL) {
    
  } else {
    
  }
  field_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pkt2.Variable.field)
}
inline void Variable::unsafe_arena_set_allocated_field(
    ::std::string* field) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (field != NULL) {
    
  } else {
    
  }
  field_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      field, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pkt2.Variable.field)
}

// string name = 2;
inline void Variable::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Variable::name() const {
  // @@protoc_insertion_point(field_get:pkt2.Variable.name)
  return name_.Get();
}
inline void Variable::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pkt2.Variable.name)
}
inline void Variable::set_name(const char* value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pkt2.Variable.name)
}
inline void Variable::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pkt2.Variable.name)
}
inline ::std::string* Variable::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:pkt2.Variable.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Variable::release_name() {
  // @@protoc_insertion_point(field_release:pkt2.Variable.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Variable::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pkt2.Variable.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Variable::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pkt2.Variable.name)
}
inline void Variable::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pkt2.Variable.name)
}

// .pkt2.OutputType type = 3;
inline void Variable::clear_type() {
  type_ = 0;
}
inline ::pkt2::OutputType Variable::type() const {
  // @@protoc_insertion_point(field_get:pkt2.Variable.type)
  return static_cast< ::pkt2::OutputType >(type_);
}
inline void Variable::set_type(::pkt2::OutputType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:pkt2.Variable.type)
}

// string short_name = 4;
inline void Variable::clear_short_name() {
  short_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Variable::short_name() const {
  // @@protoc_insertion_point(field_get:pkt2.Variable.short_name)
  return short_name_.Get();
}
inline void Variable::set_short_name(const ::std::string& value) {
  
  short_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pkt2.Variable.short_name)
}
inline void Variable::set_short_name(const char* value) {
  
  short_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pkt2.Variable.short_name)
}
inline void Variable::set_short_name(const char* value,
    size_t size) {
  
  short_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pkt2.Variable.short_name)
}
inline ::std::string* Variable::mutable_short_name() {
  
  // @@protoc_insertion_point(field_mutable:pkt2.Variable.short_name)
  return short_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Variable::release_short_name() {
  // @@protoc_insertion_point(field_release:pkt2.Variable.short_name)
  
  return short_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Variable::unsafe_arena_release_short_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pkt2.Variable.short_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return short_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Variable::set_allocated_short_name(::std::string* short_name) {
  if (short_name != NULL) {
    
  } else {
    
  }
  short_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), short_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pkt2.Variable.short_name)
}
inline void Variable::unsafe_arena_set_allocated_short_name(
    ::std::string* short_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (short_name != NULL) {
    
  } else {
    
  }
  short_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      short_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pkt2.Variable.short_name)
}

// string full_name = 5;
inline void Variable::clear_full_name() {
  full_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Variable::full_name() const {
  // @@protoc_insertion_point(field_get:pkt2.Variable.full_name)
  return full_name_.Get();
}
inline void Variable::set_full_name(const ::std::string& value) {
  
  full_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pkt2.Variable.full_name)
}
inline void Variable::set_full_name(const char* value) {
  
  full_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pkt2.Variable.full_name)
}
inline void Variable::set_full_name(const char* value,
    size_t size) {
  
  full_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pkt2.Variable.full_name)
}
inline ::std::string* Variable::mutable_full_name() {
  
  // @@protoc_insertion_point(field_mutable:pkt2.Variable.full_name)
  return full_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Variable::release_full_name() {
  // @@protoc_insertion_point(field_release:pkt2.Variable.full_name)
  
  return full_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Variable::unsafe_arena_release_full_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pkt2.Variable.full_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return full_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Variable::set_allocated_full_name(::std::string* full_name) {
  if (full_name != NULL) {
    
  } else {
    
  }
  full_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), full_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pkt2.Variable.full_name)
}
inline void Variable::unsafe_arena_set_allocated_full_name(
    ::std::string* full_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (full_name != NULL) {
    
  } else {
    
  }
  full_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      full_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pkt2.Variable.full_name)
}

// string measure_unit = 6;
inline void Variable::clear_measure_unit() {
  measure_unit_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Variable::measure_unit() const {
  // @@protoc_insertion_point(field_get:pkt2.Variable.measure_unit)
  return measure_unit_.Get();
}
inline void Variable::set_measure_unit(const ::std::string& value) {
  
  measure_unit_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pkt2.Variable.measure_unit)
}
inline void Variable::set_measure_unit(const char* value) {
  
  measure_unit_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pkt2.Variable.measure_unit)
}
inline void Variable::set_measure_unit(const char* value,
    size_t size) {
  
  measure_unit_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pkt2.Variable.measure_unit)
}
inline ::std::string* Variable::mutable_measure_unit() {
  
  // @@protoc_insertion_point(field_mutable:pkt2.Variable.measure_unit)
  return measure_unit_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Variable::release_measure_unit() {
  // @@protoc_insertion_point(field_release:pkt2.Variable.measure_unit)
  
  return measure_unit_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Variable::unsafe_arena_release_measure_unit() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pkt2.Variable.measure_unit)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return measure_unit_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Variable::set_allocated_measure_unit(::std::string* measure_unit) {
  if (measure_unit != NULL) {
    
  } else {
    
  }
  measure_unit_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), measure_unit,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pkt2.Variable.measure_unit)
}
inline void Variable::unsafe_arena_set_allocated_measure_unit(
    ::std::string* measure_unit) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (measure_unit != NULL) {
    
  } else {
    
  }
  measure_unit_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      measure_unit, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pkt2.Variable.measure_unit)
}

// string get = 7;
inline void Variable::clear_get() {
  get_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Variable::get() const {
  // @@protoc_insertion_point(field_get:pkt2.Variable.get)
  return get_.Get();
}
inline void Variable::set_get(const ::std::string& value) {
  
  get_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pkt2.Variable.get)
}
inline void Variable::set_get(const char* value) {
  
  get_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pkt2.Variable.get)
}
inline void Variable::set_get(const char* value,
    size_t size) {
  
  get_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pkt2.Variable.get)
}
inline ::std::string* Variable::mutable_get() {
  
  // @@protoc_insertion_point(field_mutable:pkt2.Variable.get)
  return get_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Variable::release_get() {
  // @@protoc_insertion_point(field_release:pkt2.Variable.get)
  
  return get_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Variable::unsafe_arena_release_get() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pkt2.Variable.get)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return get_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Variable::set_allocated_get(::std::string* get) {
  if (get != NULL) {
    
  } else {
    
  }
  get_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), get,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pkt2.Variable.get)
}
inline void Variable::unsafe_arena_set_allocated_get(
    ::std::string* get) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (get != NULL) {
    
  } else {
    
  }
  get_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      get, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pkt2.Variable.get)
}

// repeated string values = 8;
inline int Variable::values_size() const {
  return values_.size();
}
inline void Variable::clear_values() {
  values_.Clear();
}
inline const ::std::string& Variable::values(int index) const {
  // @@protoc_insertion_point(field_get:pkt2.Variable.values)
  return values_.Get(index);
}
inline ::std::string* Variable::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:pkt2.Variable.values)
  return values_.Mutable(index);
}
inline void Variable::set_values(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:pkt2.Variable.values)
  values_.Mutable(index)->assign(value);
}
inline void Variable::set_values(int index, const char* value) {
  values_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:pkt2.Variable.values)
}
inline void Variable::set_values(int index, const char* value, size_t size) {
  values_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pkt2.Variable.values)
}
inline ::std::string* Variable::add_values() {
  // @@protoc_insertion_point(field_add_mutable:pkt2.Variable.values)
  return values_.Add();
}
inline void Variable::add_values(const ::std::string& value) {
  values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:pkt2.Variable.values)
}
inline void Variable::add_values(const char* value) {
  values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:pkt2.Variable.values)
}
inline void Variable::add_values(const char* value, size_t size) {
  values_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:pkt2.Variable.values)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Variable::values() const {
  // @@protoc_insertion_point(field_list:pkt2.Variable.values)
  return values_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Variable::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:pkt2.Variable.values)
  return &values_;
}

// uint32 priority = 9;
inline void Variable::clear_priority() {
  priority_ = 0u;
}
inline ::google::protobuf::uint32 Variable::priority() const {
  // @@protoc_insertion_point(field_get:pkt2.Variable.priority)
  return priority_;
}
inline void Variable::set_priority(::google::protobuf::uint32 value) {
  
  priority_ = value;
  // @@protoc_insertion_point(field_set:pkt2.Variable.priority)
}

// string format = 10;
inline void Variable::clear_format() {
  format_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Variable::format() const {
  // @@protoc_insertion_point(field_get:pkt2.Variable.format)
  return format_.Get();
}
inline void Variable::set_format(const ::std::string& value) {
  
  format_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pkt2.Variable.format)
}
inline void Variable::set_format(const char* value) {
  
  format_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pkt2.Variable.format)
}
inline void Variable::set_format(const char* value,
    size_t size) {
  
  format_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pkt2.Variable.format)
}
inline ::std::string* Variable::mutable_format() {
  
  // @@protoc_insertion_point(field_mutable:pkt2.Variable.format)
  return format_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Variable::release_format() {
  // @@protoc_insertion_point(field_release:pkt2.Variable.format)
  
  return format_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Variable::unsafe_arena_release_format() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pkt2.Variable.format)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return format_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Variable::set_allocated_format(::std::string* format) {
  if (format != NULL) {
    
  } else {
    
  }
  format_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), format,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pkt2.Variable.format)
}
inline void Variable::unsafe_arena_set_allocated_format(
    ::std::string* format) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (format != NULL) {
    
  } else {
    
  }
  format_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      format, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pkt2.Variable.format)
}

// string tostring = 11;
inline void Variable::clear_tostring() {
  tostring_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Variable::tostring() const {
  // @@protoc_insertion_point(field_get:pkt2.Variable.tostring)
  return tostring_.Get();
}
inline void Variable::set_tostring(const ::std::string& value) {
  
  tostring_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pkt2.Variable.tostring)
}
inline void Variable::set_tostring(const char* value) {
  
  tostring_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pkt2.Variable.tostring)
}
inline void Variable::set_tostring(const char* value,
    size_t size) {
  
  tostring_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pkt2.Variable.tostring)
}
inline ::std::string* Variable::mutable_tostring() {
  
  // @@protoc_insertion_point(field_mutable:pkt2.Variable.tostring)
  return tostring_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Variable::release_tostring() {
  // @@protoc_insertion_point(field_release:pkt2.Variable.tostring)
  
  return tostring_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Variable::unsafe_arena_release_tostring() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pkt2.Variable.tostring)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return tostring_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Variable::set_allocated_tostring(::std::string* tostring) {
  if (tostring != NULL) {
    
  } else {
    
  }
  tostring_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tostring,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pkt2.Variable.tostring)
}
inline void Variable::unsafe_arena_set_allocated_tostring(
    ::std::string* tostring) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (tostring != NULL) {
    
  } else {
    
  }
  tostring_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      tostring, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pkt2.Variable.tostring)
}

// uint32 index = 12;
inline void Variable::clear_index() {
  index_ = 0u;
}
inline ::google::protobuf::uint32 Variable::index() const {
  // @@protoc_insertion_point(field_get:pkt2.Variable.index)
  return index_;
}
inline void Variable::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:pkt2.Variable.index)
}

// -------------------------------------------------------------------

// Address

// .pkt2.Proto proto = 1;
inline void Address::clear_proto() {
  proto_ = 0;
}
inline ::pkt2::Proto Address::proto() const {
  // @@protoc_insertion_point(field_get:pkt2.Address.proto)
  return static_cast< ::pkt2::Proto >(proto_);
}
inline void Address::set_proto(::pkt2::Proto value) {
  
  proto_ = value;
  // @@protoc_insertion_point(field_set:pkt2.Address.proto)
}

// string address = 2;
inline void Address::clear_address() {
  address_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Address::address() const {
  // @@protoc_insertion_point(field_get:pkt2.Address.address)
  return address_.Get();
}
inline void Address::set_address(const ::std::string& value) {
  
  address_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pkt2.Address.address)
}
inline void Address::set_address(const char* value) {
  
  address_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pkt2.Address.address)
}
inline void Address::set_address(const char* value,
    size_t size) {
  
  address_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pkt2.Address.address)
}
inline ::std::string* Address::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:pkt2.Address.address)
  return address_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Address::release_address() {
  // @@protoc_insertion_point(field_release:pkt2.Address.address)
  
  return address_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Address::unsafe_arena_release_address() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pkt2.Address.address)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return address_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Address::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pkt2.Address.address)
}
inline void Address::unsafe_arena_set_allocated_address(
    ::std::string* address) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (address != NULL) {
    
  } else {
    
  }
  address_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      address, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pkt2.Address.address)
}

// uint32 port = 3;
inline void Address::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 Address::port() const {
  // @@protoc_insertion_point(field_get:pkt2.Address.port)
  return port_;
}
inline void Address::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:pkt2.Address.port)
}

// -------------------------------------------------------------------

// Packet

// repeated .pkt2.Address source = 1;
inline int Packet::source_size() const {
  return source_.size();
}
inline void Packet::clear_source() {
  source_.Clear();
}
inline const ::pkt2::Address& Packet::source(int index) const {
  // @@protoc_insertion_point(field_get:pkt2.Packet.source)
  return source_.Get(index);
}
inline ::pkt2::Address* Packet::mutable_source(int index) {
  // @@protoc_insertion_point(field_mutable:pkt2.Packet.source)
  return source_.Mutable(index);
}
inline ::pkt2::Address* Packet::add_source() {
  // @@protoc_insertion_point(field_add:pkt2.Packet.source)
  return source_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pkt2::Address >*
Packet::mutable_source() {
  // @@protoc_insertion_point(field_mutable_list:pkt2.Packet.source)
  return &source_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pkt2::Address >&
Packet::source() const {
  // @@protoc_insertion_point(field_list:pkt2.Packet.source)
  return source_;
}

// repeated .pkt2.Address destination = 2;
inline int Packet::destination_size() const {
  return destination_.size();
}
inline void Packet::clear_destination() {
  destination_.Clear();
}
inline const ::pkt2::Address& Packet::destination(int index) const {
  // @@protoc_insertion_point(field_get:pkt2.Packet.destination)
  return destination_.Get(index);
}
inline ::pkt2::Address* Packet::mutable_destination(int index) {
  // @@protoc_insertion_point(field_mutable:pkt2.Packet.destination)
  return destination_.Mutable(index);
}
inline ::pkt2::Address* Packet::add_destination() {
  // @@protoc_insertion_point(field_add:pkt2.Packet.destination)
  return destination_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pkt2::Address >*
Packet::mutable_destination() {
  // @@protoc_insertion_point(field_mutable_list:pkt2.Packet.destination)
  return &destination_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pkt2::Address >&
Packet::destination() const {
  // @@protoc_insertion_point(field_list:pkt2.Packet.destination)
  return destination_;
}

// string name = 3;
inline void Packet::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Packet::name() const {
  // @@protoc_insertion_point(field_get:pkt2.Packet.name)
  return name_.Get();
}
inline void Packet::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pkt2.Packet.name)
}
inline void Packet::set_name(const char* value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pkt2.Packet.name)
}
inline void Packet::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pkt2.Packet.name)
}
inline ::std::string* Packet::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:pkt2.Packet.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Packet::release_name() {
  // @@protoc_insertion_point(field_release:pkt2.Packet.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Packet::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pkt2.Packet.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Packet::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pkt2.Packet.name)
}
inline void Packet::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pkt2.Packet.name)
}

// uint64 id = 4;
inline void Packet::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Packet::id() const {
  // @@protoc_insertion_point(field_get:pkt2.Packet.id)
  return id_;
}
inline void Packet::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:pkt2.Packet.id)
}

// string short_name = 5;
inline void Packet::clear_short_name() {
  short_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Packet::short_name() const {
  // @@protoc_insertion_point(field_get:pkt2.Packet.short_name)
  return short_name_.Get();
}
inline void Packet::set_short_name(const ::std::string& value) {
  
  short_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pkt2.Packet.short_name)
}
inline void Packet::set_short_name(const char* value) {
  
  short_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pkt2.Packet.short_name)
}
inline void Packet::set_short_name(const char* value,
    size_t size) {
  
  short_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pkt2.Packet.short_name)
}
inline ::std::string* Packet::mutable_short_name() {
  
  // @@protoc_insertion_point(field_mutable:pkt2.Packet.short_name)
  return short_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Packet::release_short_name() {
  // @@protoc_insertion_point(field_release:pkt2.Packet.short_name)
  
  return short_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Packet::unsafe_arena_release_short_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pkt2.Packet.short_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return short_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Packet::set_allocated_short_name(::std::string* short_name) {
  if (short_name != NULL) {
    
  } else {
    
  }
  short_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), short_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pkt2.Packet.short_name)
}
inline void Packet::unsafe_arena_set_allocated_short_name(
    ::std::string* short_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (short_name != NULL) {
    
  } else {
    
  }
  short_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      short_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pkt2.Packet.short_name)
}

// string full_name = 6;
inline void Packet::clear_full_name() {
  full_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Packet::full_name() const {
  // @@protoc_insertion_point(field_get:pkt2.Packet.full_name)
  return full_name_.Get();
}
inline void Packet::set_full_name(const ::std::string& value) {
  
  full_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pkt2.Packet.full_name)
}
inline void Packet::set_full_name(const char* value) {
  
  full_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pkt2.Packet.full_name)
}
inline void Packet::set_full_name(const char* value,
    size_t size) {
  
  full_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pkt2.Packet.full_name)
}
inline ::std::string* Packet::mutable_full_name() {
  
  // @@protoc_insertion_point(field_mutable:pkt2.Packet.full_name)
  return full_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Packet::release_full_name() {
  // @@protoc_insertion_point(field_release:pkt2.Packet.full_name)
  
  return full_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Packet::unsafe_arena_release_full_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pkt2.Packet.full_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return full_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Packet::set_allocated_full_name(::std::string* full_name) {
  if (full_name != NULL) {
    
  } else {
    
  }
  full_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), full_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pkt2.Packet.full_name)
}
inline void Packet::unsafe_arena_set_allocated_full_name(
    ::std::string* full_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (full_name != NULL) {
    
  } else {
    
  }
  full_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      full_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pkt2.Packet.full_name)
}

// repeated .pkt2.Field fields = 7;
inline int Packet::fields_size() const {
  return fields_.size();
}
inline void Packet::clear_fields() {
  fields_.Clear();
}
inline const ::pkt2::Field& Packet::fields(int index) const {
  // @@protoc_insertion_point(field_get:pkt2.Packet.fields)
  return fields_.Get(index);
}
inline ::pkt2::Field* Packet::mutable_fields(int index) {
  // @@protoc_insertion_point(field_mutable:pkt2.Packet.fields)
  return fields_.Mutable(index);
}
inline ::pkt2::Field* Packet::add_fields() {
  // @@protoc_insertion_point(field_add:pkt2.Packet.fields)
  return fields_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pkt2::Field >*
Packet::mutable_fields() {
  // @@protoc_insertion_point(field_mutable_list:pkt2.Packet.fields)
  return &fields_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pkt2::Field >&
Packet::fields() const {
  // @@protoc_insertion_point(field_list:pkt2.Packet.fields)
  return fields_;
}

// string set = 8;
inline void Packet::clear_set() {
  set_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Packet::set() const {
  // @@protoc_insertion_point(field_get:pkt2.Packet.set)
  return set_.Get();
}
inline void Packet::set_set(const ::std::string& value) {
  
  set_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:pkt2.Packet.set)
}
inline void Packet::set_set(const char* value) {
  
  set_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:pkt2.Packet.set)
}
inline void Packet::set_set(const char* value,
    size_t size) {
  
  set_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:pkt2.Packet.set)
}
inline ::std::string* Packet::mutable_set() {
  
  // @@protoc_insertion_point(field_mutable:pkt2.Packet.set)
  return set_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Packet::release_set() {
  // @@protoc_insertion_point(field_release:pkt2.Packet.set)
  
  return set_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Packet::unsafe_arena_release_set() {
  // @@protoc_insertion_point(field_unsafe_arena_release:pkt2.Packet.set)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return set_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Packet::set_allocated_set(::std::string* set) {
  if (set != NULL) {
    
  } else {
    
  }
  set_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), set,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:pkt2.Packet.set)
}
inline void Packet::unsafe_arena_set_allocated_set(
    ::std::string* set) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (set != NULL) {
    
  } else {
    
  }
  set_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      set, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pkt2.Packet.set)
}

// repeated string head = 10;
inline int Packet::head_size() const {
  return head_.size();
}
inline void Packet::clear_head() {
  head_.Clear();
}
inline const ::std::string& Packet::head(int index) const {
  // @@protoc_insertion_point(field_get:pkt2.Packet.head)
  return head_.Get(index);
}
inline ::std::string* Packet::mutable_head(int index) {
  // @@protoc_insertion_point(field_mutable:pkt2.Packet.head)
  return head_.Mutable(index);
}
inline void Packet::set_head(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:pkt2.Packet.head)
  head_.Mutable(index)->assign(value);
}
inline void Packet::set_head(int index, const char* value) {
  head_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:pkt2.Packet.head)
}
inline void Packet::set_head(int index, const char* value, size_t size) {
  head_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pkt2.Packet.head)
}
inline ::std::string* Packet::add_head() {
  // @@protoc_insertion_point(field_add_mutable:pkt2.Packet.head)
  return head_.Add();
}
inline void Packet::add_head(const ::std::string& value) {
  head_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:pkt2.Packet.head)
}
inline void Packet::add_head(const char* value) {
  head_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:pkt2.Packet.head)
}
inline void Packet::add_head(const char* value, size_t size) {
  head_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:pkt2.Packet.head)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Packet::head() const {
  // @@protoc_insertion_point(field_list:pkt2.Packet.head)
  return head_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Packet::mutable_head() {
  // @@protoc_insertion_point(field_mutable_list:pkt2.Packet.head)
  return &head_;
}

// -------------------------------------------------------------------

// Sql

// .pkt2.Dialect dialect = 1;
inline void Sql::clear_dialect() {
  dialect_ = 0;
}
inline ::pkt2::Dialect Sql::dialect() const {
  // @@protoc_insertion_point(field_get:pkt2.Sql.dialect)
  return static_cast< ::pkt2::Dialect >(dialect_);
}
inline void Sql::set_dialect(::pkt2::Dialect value) {
  
  dialect_ = value;
  // @@protoc_insertion_point(field_set:pkt2.Sql.dialect)
}

// -------------------------------------------------------------------

// Output

// uint32 id = 1;
inline void Output::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 Output::id() const {
  // @@protoc_insertion_point(field_get:pkt2.Output.id)
  return id_;
}
inline void Output::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:pkt2.Output.id)
}

// .pkt2.Sql sql = 2;
inline bool Output::has_sql() const {
  return this != internal_default_instance() && sql_ != NULL;
}
inline void Output::clear_sql() {
  if (GetArenaNoVirtual() == NULL && sql_ != NULL) delete sql_;
  sql_ = NULL;
}
inline const ::pkt2::Sql& Output::sql() const {
  // @@protoc_insertion_point(field_get:pkt2.Output.sql)
  return sql_ != NULL ? *sql_
                         : *::pkt2::Sql::internal_default_instance();
}
inline ::pkt2::Sql* Output::mutable_sql() {
  
  if (sql_ == NULL) {
    _slow_mutable_sql();
  }
  // @@protoc_insertion_point(field_mutable:pkt2.Output.sql)
  return sql_;
}
inline ::pkt2::Sql* Output::release_sql() {
  // @@protoc_insertion_point(field_release:pkt2.Output.sql)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_sql();
  } else {
    ::pkt2::Sql* temp = sql_;
    sql_ = NULL;
    return temp;
  }
}
inline  void Output::set_allocated_sql(::pkt2::Sql* sql) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete sql_;
  }
  if (sql != NULL) {
    _slow_set_allocated_sql(message_arena, &sql);
  }
  sql_ = sql;
  if (sql) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pkt2.Output.sql)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace pkt2

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pkt2::InputType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pkt2::InputType>() {
  return ::pkt2::InputType_descriptor();
}
template <> struct is_proto_enum< ::pkt2::OutputType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pkt2::OutputType>() {
  return ::pkt2::OutputType_descriptor();
}
template <> struct is_proto_enum< ::pkt2::Endian> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pkt2::Endian>() {
  return ::pkt2::Endian_descriptor();
}
template <> struct is_proto_enum< ::pkt2::Proto> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pkt2::Proto>() {
  return ::pkt2::Proto_descriptor();
}
template <> struct is_proto_enum< ::pkt2::Dialect> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pkt2::Dialect>() {
  return ::pkt2::Dialect_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_pkt2_2eproto__INCLUDED
